{"mappings":"ACAA,a,I,E,Q,M,E,Q,OAeA,CAAA,OAAA,OAAA,CAAiB,WACb,IAAM,EAA2B,EAAA,QAAA,CAAc,IAAI,CAAC,YAAA,CAAc,EAAA,OAAA,CAAa,IAAI,CAAC,YAApF,GAII,EAAkB,AAf1B,SAAsC,CAAa,EAC/C,GAAI,CACA,IAAM,EAAQ,EAAA,WAAA,CAAe,GAC7B,OAAO,EAAM,GAAA,CAAI,AAAC,GAAS,EAAA,KAAA,CAAW,GAAM,IAA5C,CACJ,CAAE,MAAO,EAAK,CAEV,OADA,QAAQ,KAAA,CAAM,uBAAwB,GAC/B,EAAE,AACb,CACJ,EAOuD,EAAA,OAAA,CAAa,IAAI,CAAC,YAArE,GAGI,EAAgB,GAChB,EAAgB,GACpB,IAAK,IAAM,KAAkB,EAErB,CAAC,QAAS,EAAyB,CAAC,QAAA,CAAS,KACjD,GAAiB,CAAC,OAAO,EAAE,EAAe,SAAS,EAAE,EAAe;AAAI,CAAC,CACzE,GAAiB,CAAC,IAAI,EAAE,EAAe;AAAG,CAAC,EAU/C,OANe,EAAA,uBAGf,EACA,MAGJ","sources":["<anon>","src/index.js"],"sourcesContent":["var $6YMy9$fs = require(\"fs\");\nvar $6YMy9$path = require(\"path\");\n\n\"use strict\";\n\n\nfunction $6dbc217b010a975b$var$listFilenamesInDirectorySync(directoryPath) {\n    try {\n        const files = $6YMy9$fs.readdirSync(directoryPath);\n        return files.map((file)=>$6YMy9$path.parse(file).name);\n    } catch (err) {\n        console.error(\"meta-importer error:\", err);\n        return [];\n    }\n}\nmodule.exports = function() {\n    const fileNameWithoutExtension = $6YMy9$path.basename(this.resourcePath, $6YMy9$path.extname(this.resourcePath));\n    let outputString = \"\";\n    // Retrieve the list of modules in the directory\n    let modulesToImport = $6dbc217b010a975b$var$listFilenamesInDirectorySync($6YMy9$path.dirname(this.resourcePath));\n    // Add imports to the top of the file\n    let importsString = \"\";\n    let exportsString = \"\";\n    for (const importedModule of modulesToImport){\n        // ignore the curent file and anything named \"index\"\n        if ([\n            \"index\",\n            fileNameWithoutExtension\n        ].includes(importedModule)) continue;\n        importsString += `import ${importedModule} from \"./${importedModule}\";\\n`;\n        exportsString += `    ${importedModule},\\n`;\n    }\n    // Build the output string\n    outputString = importsString + \"\\n\" + \"export default {\\n\" + exportsString + \"};\\n\";\n    return outputString;\n};\n\n\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nfunction listFilenamesInDirectorySync(directoryPath) {\n    try {\n        const files = fs.readdirSync(directoryPath);\n        return files.map((file) => path.parse(file).name);\n    } catch (err) {\n        console.error('meta-importer error:', err);\n        return [];\n    }\n}\n\nmodule.exports = function() {\n    const fileNameWithoutExtension = path.basename(this.resourcePath, path.extname(this.resourcePath));\n    let outputString = '';\n    \n    // Retrieve the list of modules in the directory\n    let modulesToImport = listFilenamesInDirectorySync(path.dirname(this.resourcePath));\n\n    // Add imports to the top of the file\n    let importsString = '';\n    let exportsString = '';\n    for (const importedModule of modulesToImport) {\n        // ignore the curent file and anything named \"index\"\n        if (['index', fileNameWithoutExtension].includes(importedModule)) continue;\n        importsString += `import ${importedModule} from \"./${importedModule}\";\\n`;\n        exportsString += `    ${importedModule},\\n`;\n    }\n\n    // Build the output string\n    outputString = importsString +\n    '\\n' + \n    'export default {\\n' +\n    exportsString +\n    '};\\n';\n\n    return outputString;\n};\n"],"names":["$6YMy9$fs","require","$6YMy9$path","module","exports","fileNameWithoutExtension","basename","resourcePath","extname","modulesToImport","$6dbc217b010a975b$var$listFilenamesInDirectorySync","directoryPath","files","readdirSync","map","file","parse","name","err","console","error","dirname","importsString","exportsString","importedModule","includes"],"version":3,"file":"index.js.map"}